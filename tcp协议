0x81是一个字节, 8位
0x8101<<8左移8位就是0x810100

int iResult = recv(s, buffer,1024);
这是用来接收数据的，在默认的阻塞模式下的套接字里，recv会阻塞在那里，直到套接字连接上有数据可读，
把数据读到buffer里后recv函数才会返回，不然就会一直阻塞在那里。在单线程的程序里出现这种情况会导致
主线程（单线程程序里只有一个默认的主线程）被阻塞,这样整个程序被锁死在这里，如果永 远没数据发送过来，
那么程序就会被永远锁死。这个问题可以用多线程解决，但是在有多个套接字连接的情况下，这不是一个好的选择，扩展性很差。

再看代码：
select()函数:使用select以后最大的优势是用户可以在一个线程内同时处理多个socket的IO请求。
在网络编程中，当涉及到多客户访问服务器的情况，我们首先想到的办法就是fork出多个进程来处理每个客户连接。
现在，我们同样可以使用select来处理多客户问题，而不用fork。
https://www.cnblogs.com/skyfsm/p/7079458.html
